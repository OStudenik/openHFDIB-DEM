/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;
xInlet 0;
xOutlet  12;
xResolution 100;

ycStart -0.05;
ycyclicLength  0.05; //dp = 2, i.e., 4 diameters per box
ycyclicResolution 1;

zcStart -3;
zcyclicLength  3; //dp = 2, i.e., 4 diameters per box

zcyclicResolution 50;



vertices
(
  ($xInlet  $ycStart       $zcStart)
  ($xOutlet $ycStart       $zcStart)
  ($xOutlet $ycyclicLength $zcStart)
  ($xInlet  $ycyclicLength $zcStart)
  ($xInlet  $ycStart       $zcyclicLength)
  ($xOutlet $ycStart       $zcyclicLength)
  ($xOutlet $ycyclicLength $zcyclicLength)
  ($xInlet  $ycyclicLength $zcyclicLength)


);

blocks
(
  hex (0 1 2 3 4 5 6 7) ($xResolution $ycyclicResolution $zcyclicResolution) simpleGrading (1 1 1)

);

edges
(
);

boundary
(
  z1
{
  type wall;
  faces
  (
   (4 5 6 7)
  );
}

z0
{
  type wall;
  faces
  (
   (0 3 2 1)
  );
}

x1
{

type wall;
neighbourPatch x0;
  faces
  (
  (2 6 5 1)
 );
}

x0
{
type patch;
neighbourPatch x1;
  faces
  (
  (0 4 7 3)
  );
}

frontAndBack
 {
  type empty;
     faces
     (
     (3 7 6 2)
     (1 5 4 0)
     );
 }



);

mergePatchPairs
(
);

// ************************************************************************* //
