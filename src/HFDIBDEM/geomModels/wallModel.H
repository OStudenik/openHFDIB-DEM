/*---------------------------------------------------------------------------*\
                        _   _ ____________ ___________    ______ ______ _    _
                       | | | ||  ___|  _  \_   _| ___ \   |  _  \|  ___| \  / |
  ___  _ __   ___ _ __ | |_| || |_  | | | | | | | |_/ /   | | | || |_  |  \/  |
 / _ \| '_ \ / _ \ '_ \|  _  ||  _| | | | | | | | ___ \---| | | ||  _| | |\/| |
| (_) | |_) |  __/ | | | | | || |   | |/ / _| |_| |_/ /---| |/ / | |___| |  | |
 \___/| .__/ \___|_| |_\_| |_/\_|   |___/  \___/\____/    |___/  |_____|_|  |_|
      | |                     H ybrid F ictitious D omain - I mmersed B oundary
      |_|                                        and D iscrete E lement M ethod
-------------------------------------------------------------------------------
License

    openHFDIB-DEM is licensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL).

    Everyone is permitted to copy and distribute verbatim copies of this license
    document, but changing it is not allowed.

    This version of the GNU Lesser General Public License incorporates the terms
    and conditions of version 3 of the GNU General Public License, supplemented
    by the additional permissions listed below.

    You should have received a copy of the GNU Lesser General Public License
    along with openHFDIB. If not, see <http://www.gnu.org/licenses/lgpl.html>.

InNamspace
    Foam

Description
    class for the wall contact geomModel

SourceFiles
    wallModel.C

Contributors
    Martin Isoz (2019-*), Martin Kotouč Šourek (2019-*),
    Ondřej Studeník (2020-*)
\*---------------------------------------------------------------------------*/

#ifndef wallModel_H
#define wallModel_H

#include "IGeomModelVM.H"
#include "plane.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                        Class wallModel Declaration
\*---------------------------------------------------------------------------*/
class wallModel : public IGeomModelVM
{
    private:

    List<plane> contactPlanes_;

    public:

    // Constructors ------------------------------------------------

    wallModel
    (
        List<string> contactPatches
    );

    // Destructors -------------------------------------------------
    virtual ~wallModel();

    volumeType getPlaneVolumeType
    (
        const plane& pl,
        const subVolume& sv
    );

    virtual volumeType getVolumeType(
        subVolume& sv,
        bool cIb
    ) final override;

    virtual bool limitFinalSubVolume
    (
        const subVolume& sv,
        bool cIb,
        boundBox& limBBox
    ) final override;

    virtual scalar getDC() final override
    {
        return 1.0;
    }

    virtual void getClosestPointAndNormal
    (
        const point& startPoint,
        const vector& span,
        point& closestPoint,
        vector& normal
    ) final override;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
